{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://bedoc.gesslar.dev/schemas/v1/bedoc.action.json",
  "title": "BeDoc Action Schema",
  "type": "object",
  "properties": {
    "accepts": {
      "description": "Defines the expected data structure a printer will accept for processing.",
      "$ref": "#/definitions/acceptsNode"
    },
    "provides": {
      "description": "Defines the data structure a parser will produce as output.",
      "$ref": "#/definitions/providesNode"
    }
  },
  "oneOf": [
    {
      "required": [
        "accepts"
      ]
    },
    {
      "required": [
        "provides"
      ]
    }
  ],
  "definitions": {
    "acceptsNode": {
      "type": "object",
      "description": "Defines an individual node within the accepts structure.",
      "properties": {
        "type": {
          "description": "Defines the expected data format for this node. It can be a single type or an array of types.",
          "oneOf": [
            {
              "type": "string",
              "$ref": "#/$defs/dataTypes"
            },
            {
              "type": "array",
              "items": {
                "type": "string",
                "$ref": "#/$defs/dataTypes"
              }
            }
          ]
        },
        "required": {
          "description": "Boolean value asserting whether this value is required by the printer. Default is false if unspecified.",
          "type": "boolean"
        }
      },
      "required": [
        "type"
      ]
    },
    "providesNode": {
      "type": "object",
      "description": "Defines an individual node within the provides structure.",
      "properties": {
        "type": {
          "description": "Declares the type of data this node provides. Must be a single string value from the predefined set.",
          "type": "string",
          "$ref": "#/$defs/dataTypes"
        }
      },
      "required": [
        "type"
      ]
    }
  },
  "$defs": {
    "dataTypes": {
      "enum": [
        "object",
        "object[]",
        "string",
        "string[]",
        "boolean"
      ]
    }
  }
}
